# Generated by Django 2.1.2 on 2018-11-01 19:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('invernaderos', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='actuador',
            name='id_dispositivo',
            field=models.ForeignKey(blank=True, error_messages={'select': 'Debe seleccionar uno de la lista'}, help_text='Dispositivo que se asociará a este actuador', null=True, on_delete=django.db.models.deletion.CASCADE, to='invernaderos.Dispositivo', verbose_name='Dispositivo'),
        ),
        migrations.AlterField(
            model_name='actuador',
            name='nombre_actuador',
            field=models.CharField(blank=True, error_messages={'empty': 'Este campo no debe quedar vacío'}, help_text='Ingrese el nombre del actuador a usar', max_length=45, null=True, verbose_name='Nombre del Actuador'),
        ),
        migrations.AlterField(
            model_name='cultivo',
            name='nombre_cultivo',
            field=models.CharField(blank=True, error_messages={'empty': 'Este campo no debe quedar vacío'}, help_text='Nombre de la planta a cultivar', max_length=45, null=True, verbose_name='Nombre del cultivo'),
        ),
        migrations.AlterField(
            model_name='cultivo',
            name='periodo_cosecha',
            field=models.IntegerField(blank=True, error_messages={'value': 'Debe ser un dato entero positivo'}, help_text='Debe ingresar el tiempo que tarda el cultivo en dar frutos', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)], verbose_name='Periódo de Cosecha'),
        ),
        migrations.AlterField(
            model_name='dispositivo',
            name='nombre_dispositivo',
            field=models.CharField(blank=True, error_messages={'empty': 'Este campo no debe quedar vacío'}, help_text='Dele un nombre al dispositivo a usar en sus invernaderos', max_length=45, null=True, verbose_name='Nombre del dispositivo'),
        ),
        migrations.AlterField(
            model_name='etapa',
            name='descripcion_etapa',
            field=models.CharField(blank=True, error_messages={'empty': 'Este campo no debe quedar vacío'}, help_text='Ingrese una breve descripción de la etapa', max_length=150, null=True, verbose_name='Descripcion de la etapa'),
        ),
        migrations.AlterField(
            model_name='etapa',
            name='duracion',
            field=models.IntegerField(blank=True, error_messages={'value': 'Debe ser un dato entero positivo'}, help_text='Debe ingresar el tiempo que dura esta etapa', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Duración de la etapa'),
        ),
        migrations.AlterField(
            model_name='etapa',
            name='id_cultivo',
            field=models.ForeignKey(blank=True, error_messages={'select': 'Debe seleccionar uno de la lista'}, help_text='Cultivo al que pertenece esta etapa', null=True, on_delete=django.db.models.deletion.CASCADE, to='invernaderos.Cultivo', verbose_name='Cultivo'),
        ),
        migrations.AlterField(
            model_name='etapa',
            name='nombre_etapa',
            field=models.CharField(blank=True, error_messages={'empty': 'Este campo no debe quedar vacío'}, help_text='Ingrese el nombre de la etapa. Ejemplo: Floración', max_length=45, null=True, verbose_name='Nombre de etapa'),
        ),
        migrations.AlterField(
            model_name='etapa',
            name='numero_etapa',
            field=models.IntegerField(blank=True, error_messages={'value': 'Debe ser un dato entero positivo'}, help_text='Debe ingresar la cantidad de etapas durante el tiempo de vida del cultivo', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Número de etapa'),
        ),
        migrations.AlterField(
            model_name='invernadero',
            name='id_cultivo',
            field=models.ManyToManyField(blank=True, error_messages={'select': 'Debe seleccionar uno de la lista'}, help_text='Cultivo que se cosechará en este invernadero', null=True, to='invernaderos.Cultivo', verbose_name='Cultivo'),
        ),
        migrations.AlterField(
            model_name='invernadero',
            name='id_dispositivo',
            field=models.ForeignKey(blank=True, error_messages={'select': 'Debe seleccionar uno de la lista'}, help_text='Dispositivo que controla este invernadero', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='invernaderos.Dispositivo', verbose_name='Dispositivo'),
        ),
        migrations.AlterField(
            model_name='invernadero',
            name='id_usuario',
            field=models.ForeignKey(blank=True, error_messages={'select': 'Debe seleccionar uno de la lista'}, help_text='Usuario al que pertenece este invernadero', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.AlterField(
            model_name='invernadero',
            name='nombre_invernadero',
            field=models.CharField(blank=True, error_messages={'empty': 'Este campo no debe quedar vacío'}, help_text='Asignele un nombre cualquiera al invernadero', max_length=45, null=True, verbose_name='Nombre del invernadero'),
        ),
        migrations.AlterField(
            model_name='invernadero',
            name='ubicacion',
            field=models.CharField(blank=True, error_messages={'empty': 'Este campo no debe quedar vacío'}, help_text='Ingrese la ubicación del invernadero', max_length=15, null=True, verbose_name='Ubicacion del invernadero'),
        ),
        migrations.AlterField(
            model_name='medicion',
            name='fecha_medicion',
            field=models.DateTimeField(auto_now=True, error_messages={'value': 'La fecha por defecto es la de hoy'}, help_text='Momento en el que se realizó la medición', null=True, verbose_name='Fecha de lectura'),
        ),
        migrations.AlterField(
            model_name='medicion',
            name='id_actuador',
            field=models.ForeignKey(blank=True, error_messages={'select': 'Debe seleccionar uno de la lista'}, help_text='Actuador que responderá a dicha medición', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='invernaderos.Actuador', verbose_name='Actuador'),
        ),
        migrations.AlterField(
            model_name='medicion',
            name='id_invernadero',
            field=models.ForeignKey(blank=True, error_messages={'select': 'Debe seleccionar uno de la lista'}, help_text='Invernadero al que se le realizó la medición', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='invernaderos.Invernadero', verbose_name='Invernadero'),
        ),
        migrations.AlterField(
            model_name='medicion',
            name='id_parametro',
            field=models.ForeignKey(blank=True, error_messages={'select': 'Debe seleccionar uno de la lista'}, help_text='Parámetro con el que se comparará esta medición', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='invernaderos.Parametro', verbose_name='Parámetro'),
        ),
        migrations.AlterField(
            model_name='medicion',
            name='id_sensor',
            field=models.ForeignKey(blank=True, error_messages={'select': 'Debe seleccionar uno de la lista'}, help_text='Sensor con el que se realizó esta medición', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='invernaderos.Sensor', verbose_name='Sensor'),
        ),
        migrations.AlterField(
            model_name='medicion',
            name='is_activo',
            field=models.BooleanField(blank=True, default=False, error_messages={'value': 'Debe ser un atributo boleano'}, help_text='Respuesta del dispositivo', null=True, verbose_name='¿Está activo?'),
        ),
        migrations.AlterField(
            model_name='medicion',
            name='magnitud_medicion',
            field=models.DecimalField(blank=True, decimal_places=2, error_messages={'value': 'Debe ser un valor positivo'}, help_text='Magnitud de la medición realizada', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Magnitud de la medición'),
        ),
        migrations.AlterField(
            model_name='parametro',
            name='id_invernadero',
            field=models.ForeignKey(blank=True, error_messages={'select': 'Debe seleccionar uno de la lista'}, help_text='Invernadero al que se asignará este parámetro', null=True, on_delete=django.db.models.deletion.CASCADE, to='invernaderos.Invernadero', verbose_name='Invernadero'),
        ),
        migrations.AlterField(
            model_name='parametro',
            name='magnitud_referencia',
            field=models.DecimalField(blank=True, decimal_places=2, error_messages={'value': 'Ese valor debe ser positivo'}, help_text='Ingrese el valor de la magnitud de referencia para este parámetro', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Magnitud del Parámetro Base'),
        ),
        migrations.AlterField(
            model_name='parametro',
            name='nombre_parametro',
            field=models.CharField(blank=True, error_messages={'empty': 'Este campo no debe quedar vacío'}, help_text='Ingrese el nombre del parámetro a medir', max_length=45, null=True, verbose_name='Nombre del parámetro'),
        ),
        migrations.AlterField(
            model_name='sensor',
            name='id_dispositivo',
            field=models.ForeignKey(blank=True, error_messages={'select': 'Debe seleccionar uno de la lista'}, help_text='Dispositivo asociado a este sensor', null=True, on_delete=django.db.models.deletion.CASCADE, to='invernaderos.Dispositivo', verbose_name='Dispositivo'),
        ),
        migrations.AlterField(
            model_name='sensor',
            name='nombre_sensor',
            field=models.CharField(blank=True, error_messages={'empty': 'Este campo no debe quedar vacío'}, help_text='Ingrese un nombre para este sensor', max_length=45, null=True, verbose_name='Nombre del sensor'),
        ),
    ]
